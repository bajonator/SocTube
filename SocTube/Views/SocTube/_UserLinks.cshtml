@model SocTube.Core.Models.Domains.Link



@using (Html.BeginForm("SaveLink", "SocTube", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="border-light border-top border-left">
        <div class="row text-right justify-content-center mt-5">
            <div class="form-group col-md-3">
                <h5>Dodawanie Linku</h5>
            </div>
        </div>
        <div class="row text-right justify-content-center">
            <div class="form-group mt-3 col-md-3">
                @Html.LabelFor(x => x.Name)
            </div>
            <div class="form-group mt-3 col-md-5">
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control bg-dark text-white", autofocus = "autofocus" })
                @Html.ValidationMessageFor(x => x.Name)
            </div>
        </div>
        <div class="row text-right justify-content-center">
            <div class="form-group mt-3 col-md-3">
                @Html.LabelFor(x => x.Url)
            </div>
            <div class="form-group mt-3 col-md-5">
                @Html.TextBoxFor(x => x.Url, new { @class = "form-control bg-dark text-white" })
                @Html.ValidationMessageFor(x => x.Url)
            </div>
        </div>

        <div class="row text-right justify-content-center">
            <div class="form-group mt-3 col-md-3">
                <label class="form-check-label" for="IsVisible">Widoczność</label>
            </div>
            <div class="form-check form-switch mt-3 col-md-5">
                @Html.CheckBoxFor(x => x.IsVisible, new { @class = "form-check-input", @id = "IsVisible" })
                <label class="form-check-label" for="IsVisible">zaznacz jeśli ten link ma być widoczny</label>
            </div>
        </div>
        <div class="d-flex flex-column text-center justify-content-center align-items-center">
            <button class="btn btn-primary btn-lg" type="submit">
                Zapisz
            </button>
        </div>

        <div class="form-group col-md-5 mt-5 ml-2">
            <label for="ButtonStyle">Wybierz styl dla linków:</label>
            <div class="btn-group container mt-1">
                <button type="button" class="btn rounded btn-primary btn-preview ml-1 non-changing-btn" data-style="btn-primary">Primary</button>
                <button type="button" class="btn rounded btn-secondary btn-preview ml-1 non-changing-btn" data-style="btn-secondary">Secondary</button>
                <button type="button" class="btn rounded btn-success btn-preview ml-1 non-changing-btn" data-style="btn-success">Success</button>
                <button type="button" class="btn rounded btn-danger btn-preview ml-1 non-changing-btn" data-style="btn-danger">Danger</button>
                <button type="button" class="btn rounded btn-warning btn-preview ml-1 non-changing-btn" data-style="btn-warning">Warning</button>
                <button type="button" class="btn rounded btn-info btn-preview ml-1 non-changing-btn" data-style="btn-info">Info</button>
                <button type="button" class="btn rounded btn-light btn-preview ml-1 non-changing-btn" data-style="btn-light">Light</button>
                <button type="button" class="btn rounded btn-dark btn-preview ml-1 non-changing-btn" data-style="btn-dark">Dark</button>
            </div>
            <div class="btn-group container mt-1">
                <button type="button" class="btn rounded btn-outline-primary btn-preview ml-1 non-changing-btn" data-style="btn-outline-primary">Primary</button>
                <button type="button" class="btn rounded btn-outline-secondary btn-preview ml-1 non-changing-btn" data-style="btn-outline-secondary">Secondary</button>
                <button type="button" class="btn rounded btn-outline-success btn-preview ml-1 non-changing-btn" data-style="btn-outline-success">Success</button>
                <button type="button" class="btn rounded btn-outline-danger btn-preview ml-1 non-changing-btn" data-style="btn-outline-danger">Danger</button>
                <button type="button" class="btn rounded btn-outline-warning btn-preview ml-1 non-changing-btn" data-style="btn-outline-warning">Warning</button>
                <button type="button" class="btn rounded btn-outline-info btn-preview ml-1 non-changing-btn" data-style="btn-outline-info">Info</button>
                <button type="button" class="btn rounded btn-outline-light btn-preview ml-1 non-changing-btn" data-style="btn-outline-light">Light</button>
                <button type="button" class="btn rounded btn-outline-dark btn-preview ml-1 non-changing-btn" data-style="btn-outline-dark">Dark</button>
            </div>
            @Html.HiddenFor(x => x.ButtonStyle, new { id = "HiddenButtonStyle" })
        </div>
    </div>
}

<script>


    var previewButtons = document.querySelectorAll('.btn-preview');
    previewButtons.forEach(function (button) {
        button.addEventListener('click', function () {
            var selectedStyle = this.getAttribute('data-style');
            changePreviewStyle(selectedStyle);

            function changePreviewStyle(style) {
                document.getElementById('HiddenButtonStyle').value = style;

                var previewButtons = document.querySelectorAll('.btn-preview');
                previewButtons.forEach(function (button) {
                    if (!button.classList.contains('non-changing-btn')) {
                        button.className = 'btn rounded ' + style;
                    }
                });
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveLinkStyle", "SocTube")',
                data: { buttonStyle: selectedStyle },
                success: function (data) {
                    alert("Pomyślnie zmieniono style dla linków");
                },
                error: function (error) {
                    alert("Wystąpił błąd podczas zmiany styli" + data.Message);
                }
            });
        });
    });

</script>