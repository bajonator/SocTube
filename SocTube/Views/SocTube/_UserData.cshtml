@model SocTube.Core.Models.Domains.Profile


@using (Html.BeginForm("SaveUser", "SocTube", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="border-light border-top border-left">

        @Html.HiddenFor(x => x.Id)

        <div class="row text-center justify-content-center">
            <div class="col-md-5">
                <div class="container bg-transparent text-center">
                    <div>
                        @if (Model != null && Model.ProfileImage != null)
                        {
                            <img id="profilePicturePreview" src="data:image;base64,@Convert.ToBase64String(Model.ProfileImage)" class="img-thumbnail rounded-circle mt-3" width="150" height="auto">
                        }
                        else
                        {
                            <img id="profilePicturePreview" src="#" class="img-thumbnail rounded-circle mt-3" width="150" height="auto" style="display: none;">
                        }

                    </div>
                </div>
                <button id="changePictureButton" type="button" class="btn btn-sm btn-secondary mt-2">Zmień zdjęcie</button>
            </div>
        </div>

        <div class="row text-center justify-content-center">
            <div class="col-md-5">
                <input type="file" id="profilePictureFile" name="profilePicture" accept="image/*" class="form-control-file bg-transparent" multiple style="display: none;">
            </div>
        </div>


        <div class="row text-right justify-content-center">
            <div class="form-group mt-3 col-md-3">
                @Html.LabelFor(x => x.UserName)
            </div>
            <div class="form-group mt-3 col-md-5">
                @Html.TextBoxFor(x => x.UserName, new { @class = "form-control bg-dark text-white", autofocus = "autofocus" })
            </div>
        </div>

        <div class="row text-right justify-content-center">
            <div class="form-group col-md-3">
                @Html.LabelFor(x => x.ContactEmail)
            </div>
            <div class="form-group col-md-5">
                @Html.TextBoxFor(x => x.ContactEmail, new { @class = "form-control bg-dark text-white" })
            </div>
        </div>

        <div class="row text-right justify-content-center mb-1">
            <div class="form-group col-md-3">
                @Html.LabelFor(x => x.Description)
            </div>
            <div class="form-group col-md-5">
                @Html.TextAreaFor(x => x.Description, new { @class = "form-control bg-dark text-white", rows = "2", style = "height: 100px word-break: break-all;" })
            </div>
        </div>
    </div>
    <div class="d-flex flex-column text-center justify-content-center align-items-center">
        <button class="btn btn-primary btn-lg" type="submit">
            Zapisz
        </button>
    </div>
}


<script>

    document.getElementById("changePictureButton").addEventListener("click", function () {
        if (!isButtonClicked) {
            var profilePictureFile = document.getElementById("profilePictureFile");
            profilePictureFile.click();
        }
        return;
    });

    document.getElementById("profilePictureFile").addEventListener("change", function (event) {
        var input = event.target;
        var reader = new FileReader();

        reader.onload = function () {
            var profilePicturePreview = document.getElementById("profilePicturePreview");
            profilePicturePreview.src = reader.result;
            profilePicturePreview.style.display = "";
        };

        if (input.files && input.files[0]) {
            reader.readAsDataURL(input.files[0]);
        }
    });
</script>
